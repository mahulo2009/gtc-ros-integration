<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classImageDetector" kind="class" prot="public">
    <compoundname>ImageDetector</compoundname>
    <basecompoundref refid="classImageDetectorBase" prot="public" virt="non-virtual">ImageDetectorBase</basecompoundref>
    <includes refid="ImageDetector_8h" local="no">ImageDetector.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classImageDetector_1a8b4b0693674bb3fbf85ad97c91d80a23" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double ImageDetector::numberOfExposures_</definition>
        <argsstring></argsstring>
        <name>numberOfExposures_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="79" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classImageDetector_1a6127da82483e25073b5feaec010beec3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double ImageDetector::exposureTimeSeconds_</definition>
        <argsstring></argsstring>
        <name>exposureTimeSeconds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="80" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="classImageDetector_1a7b16b3ab1bfc8b819764f440b4ca0dab" compoundref="ImageDetector_8cpp" startline="276" endline="315">expose</referencedby>
        <referencedby refid="classImageDetector_1a6abdb497a8e309ac1bf986fd69103665" compoundref="ImageDetector_8cpp" startline="100" endline="123">init</referencedby>
        <referencedby refid="classImageDetector_1a0664b23196bd0b18fefc4eed721c9101" compoundref="ImageDetector_8cpp" startline="347" endline="382">setExposureTimeSeconds</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classImageDetector_1ada44094b2d772b39295e6d8d1ecb7f97" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ImageDetector::abortAcquisition_</definition>
        <argsstring></argsstring>
        <name>abortAcquisition_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="81" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classImageDetector_1a466aed0c256e814e0568327a533688c9" prot="protected" static="no" mutable="no">
        <type>ShortArray2D</type>
        <definition>ShortArray2D ImageDetector::windows_</definition>
        <argsstring></argsstring>
        <name>windows_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="82" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" bodystart="82" bodyend="-1"/>
        <referencedby refid="classImageDetector_1a7b16b3ab1bfc8b819764f440b4ca0dab" compoundref="ImageDetector_8cpp" startline="276" endline="315">expose</referencedby>
        <referencedby refid="classImageDetector_1a63c8886bd6358a1009585298075edeb6" compoundref="ImageDetector_8cpp" startline="16" endline="28">ImageDetector</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classImageDetector_1a704c44016444ac979bc3c32922182620" prot="private" static="no" mutable="no">
        <type><ref refid="classFrameAgent" kindref="compound">FrameAgent</ref></type>
        <definition>FrameAgent ImageDetector::frameAgent_</definition>
        <argsstring></argsstring>
        <name>frameAgent_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="86" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classImageDetector_1a63c8886bd6358a1009585298075edeb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ImageDetector::ImageDetector</definition>
        <argsstring>(string name)</argsstring>
        <name>ImageDetector</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Device Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="26" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="16" bodyend="28"/>
        <references refid="classImageDetector_1a466aed0c256e814e0568327a533688c9" compoundref="ImageDetector_8h" startline="82">windows_</references>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1aa4c1e0d3deef2e14c097d83da32641d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ImageDetector::~ImageDetector</definition>
        <argsstring>()</argsstring>
        <name>~ImageDetector</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="29" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1a066b3a7203616275f6489fa4c3fea53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::connect</definition>
        <argsstring>(string orbname, bool corbaDebug, unsigned threads, long priority, bool mode=Device::INTEGRATED, bool update=Device::DO_NOT_UPDATE)</argsstring>
        <name>connect</name>
        <reimplements refid="classImageDetectorBase_1a6531ea02cc65dcf1e1a8b31190b4b8ae">connect</reimplements>
        <param>
          <type>string</type>
          <declname>orbname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>corbaDebug</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>threads</declname>
        </param>
        <param>
          <type>long</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mode</declname>
          <defval>Device::INTEGRATED</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>update</declname>
          <defval>Device::DO_NOT_UPDATE</defval>
        </param>
        <briefdescription>
<para>Connects the device with a CORBA and other GCS Services. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="34" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="49" bodyend="56"/>
        <references refid="classImageDetectorBase_1a6531ea02cc65dcf1e1a8b31190b4b8ae" compoundref="ImageDetectorBase_8cpp" startline="45" endline="124">ImageDetectorBase::connect</references>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1ab79c73fb43aeecb665783fd546dea7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <reimplements refid="classImageDetectorBase_1a9aee78fd52284771f640e82ed04af18d">start</reimplements>
        <briefdescription>
<para>Starting procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="39" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="61" bodyend="95"/>
        <references refid="classImageDetectorBase_1a1d92cfa3bff6b65138f1c452cd183131" compoundref="ImageDetectorBase_8cpp" startline="381" endline="397">ImageDetectorBase::createMonitors_</references>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1a6abdb497a8e309ac1bf986fd69103665" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <reimplements refid="classImageDetectorBase_1ab6e005a2cba52862f022961aa4162292">init</reimplements>
        <briefdescription>
<para>Initialization procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="42" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="100" bodyend="123"/>
        <references refid="classFrameAgent_1a440a10ac5136bf3904f7a012f9206cea" compoundref="FrameAgent_8cpp" startline="37" endline="77">FrameAgent::connect</references>
        <references refid="classImageDetector_1a6127da82483e25073b5feaec010beec3" compoundref="ImageDetector_8h" startline="80">exposureTimeSeconds_</references>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1a42f2bceb3247a47bd08072e85cb32a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::halt</definition>
        <argsstring>()</argsstring>
        <name>halt</name>
        <reimplements refid="classImageDetectorBase_1a5cb1f05835fc875e447f4cef379adba7">halt</reimplements>
        <briefdescription>
<para>Halting procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="45" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="128" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1a0470fd3b3f6d147d667336e5c34d41c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <reimplements refid="classImageDetectorBase_1a1335a1517f319867b5c3f02ada9366c4">shutdown</reimplements>
        <briefdescription>
<para>Shutdown procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="48" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="152" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1ae3219de53c6bfeff0020db3034d97859" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classImageDetectorBase_1aca3b0524cab576cfcd581b07df7d11e8">reset</reimplements>
        <briefdescription>
<para>Reset procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="51" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="176" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1ac1b77057fc0df217af27f81abd856d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::test</definition>
        <argsstring>()</argsstring>
        <name>test</name>
        <reimplements refid="classImageDetectorBase_1a3bca0627c613ff96098d0f46d82f725b">test</reimplements>
        <briefdescription>
<para>Test procedure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="54" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="200" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1aa962e3c12d4f6e546560ab2a3296989c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::abort</definition>
        <argsstring>()</argsstring>
        <name>abort</name>
        <reimplements refid="classImageDetectorBase_1a7a860695b02270f599084e6aad367f3c">abort</reimplements>
        <briefdescription>
<para>Stops all commands and goes to fault. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="57" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1ab42a461656723360f4cc3ad71beec763" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char *</type>
        <definition>char * ImageDetector::report</definition>
        <argsstring>(short level)</argsstring>
        <name>report</name>
        <reimplements refid="classImageDetectorBase_1a131ef38d9b156310e3e1e501d1f5488c">report</reimplements>
        <param>
          <type>short</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Report device info. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="60" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="239" bodyend="254"/>
        <references refid="classImageDetectorBase_1a131ef38d9b156310e3e1e501d1f5488c" compoundref="ImageDetectorBase_8cpp" startline="341" endline="367">ImageDetectorBase::report</references>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1a7b16b3ab1bfc8b819764f440b4ca0dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::expose</definition>
        <argsstring>()</argsstring>
        <name>expose</name>
        <reimplements refid="classImageDetectorBase_1a6455c2f261337e54f58fda82170089c8">expose</reimplements>
        <briefdescription>
<para>Expose. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="67" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="276" bodyend="315"/>
        <references refid="classImageDetector_1a6127da82483e25073b5feaec010beec3" compoundref="ImageDetector_8h" startline="80">exposureTimeSeconds_</references>
        <references refid="classImageDetectorBase_1aff1c28be4c10daf711d6009f7c5fc252" compoundref="ImageDetectorBase_8h" startline="121">ImageDetectorBase::idExposing_</references>
        <references refid="classImageDetectorBase_1a86712b3e4804cd84676f168ad27349fc" compoundref="ImageDetectorBase_8h" startline="122">ImageDetectorBase::idExposureTimeLeft_</references>
        <references refid="classFrameAgent_1aa5cfa766dcf643c74b15f99eaf195a29" compoundref="FrameAgent_8cpp" startline="113" endline="178">FrameAgent::sendFrame</references>
        <references refid="classImageDetector_1a466aed0c256e814e0568327a533688c9" compoundref="ImageDetector_8h" startline="82">windows_</references>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1a0664b23196bd0b18fefc4eed721c9101" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ImageDetector::setExposureTimeSeconds</definition>
        <argsstring>(double time)</argsstring>
        <name>setExposureTimeSeconds</name>
        <reimplements refid="classImageDetectorBase_1a9f1e986b8273fbb74d28d221875fe17f">setExposureTimeSeconds</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set exposure time in seconds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="72" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="347" bodyend="382"/>
        <references refid="classImageDetector_1a6127da82483e25073b5feaec010beec3" compoundref="ImageDetector_8h" startline="80">exposureTimeSeconds_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classImageDetector_1af4917c633b4e9ded6ac14cf52f4aa5c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageDetector::expose_</definition>
        <argsstring>()</argsstring>
        <name>expose_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classImageDetector_1af511520c53f7508cbed8371c0ecf6f8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImageDetector::buildFrame_</definition>
        <argsstring>(Frame&lt; double, 2 &gt; &amp;frame)</argsstring>
        <name>buildFrame_</name>
        <param>
          <type>Frame&lt; double, 2 &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="89" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.cpp" bodystart="317" bodyend="341"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="30">
        <label>ImageDetectorBase</label>
        <link refid="classImageDetectorBase"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>Device</label>
      </node>
      <node id="29">
        <label>ImageDetector</label>
        <link refid="classImageDetector"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="33">
        <label>ImageDetectorBase</label>
        <link refid="classImageDetectorBase"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>Device</label>
      </node>
      <node id="32">
        <label>ImageDetector</label>
        <link refid="classImageDetector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" line="17" column="1" bodyfile="/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/ImageDetector.h" bodystart="16" bodyend="90"/>
    <listofallmembers>
      <member refid="classImageDetector_1aa962e3c12d4f6e546560ab2a3296989c" prot="public" virt="virtual"><scope>ImageDetector</scope><name>abort</name></member>
      <member refid="classImageDetector_1ada44094b2d772b39295e6d8d1ecb7f97" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>abortAcquisition_</name></member>
      <member refid="classImageDetector_1af511520c53f7508cbed8371c0ecf6f8b" prot="private" virt="non-virtual"><scope>ImageDetector</scope><name>buildFrame_</name></member>
      <member refid="classImageDetector_1a066b3a7203616275f6489fa4c3fea53b" prot="public" virt="virtual"><scope>ImageDetector</scope><name>connect</name></member>
      <member refid="classImageDetectorBase_1ab0168f46cb53bc1af3e83d7b3d5f7554" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>corbaDebug_</name></member>
      <member refid="classImageDetectorBase_1a1d92cfa3bff6b65138f1c452cd183131" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>createMonitors_</name></member>
      <member refid="classImageDetector_1a7b16b3ab1bfc8b819764f440b4ca0dab" prot="public" virt="virtual"><scope>ImageDetector</scope><name>expose</name></member>
      <member refid="classImageDetector_1af4917c633b4e9ded6ac14cf52f4aa5c4" prot="private" virt="non-virtual"><scope>ImageDetector</scope><name>expose_</name></member>
      <member refid="classImageDetector_1a6127da82483e25073b5feaec010beec3" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>exposureTimeSeconds_</name></member>
      <member refid="classImageDetector_1a704c44016444ac979bc3c32922182620" prot="private" virt="non-virtual"><scope>ImageDetector</scope><name>frameAgent_</name></member>
      <member refid="classImageDetector_1a42f2bceb3247a47bd08072e85cb32a51" prot="public" virt="virtual"><scope>ImageDetector</scope><name>halt</name></member>
      <member refid="classImageDetectorBase_1a6d9e906545dcdad707723c6780bc538b" prot="public" virt="virtual"><scope>ImageDetector</scope><name>idExposing</name></member>
      <member refid="classImageDetectorBase_1aff1c28be4c10daf711d6009f7c5fc252" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>idExposing_</name></member>
      <member refid="classImageDetectorBase_1a8534c96b2cfa02f463e4560f9d589f86" prot="public" virt="virtual"><scope>ImageDetector</scope><name>idExposureTimeLeft</name></member>
      <member refid="classImageDetectorBase_1a86712b3e4804cd84676f168ad27349fc" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>idExposureTimeLeft_</name></member>
      <member refid="classImageDetector_1a63c8886bd6358a1009585298075edeb6" prot="public" virt="non-virtual"><scope>ImageDetector</scope><name>ImageDetector</name></member>
      <member refid="classImageDetectorBase_1a0e0e93f0c65dc6d5871914a604d36e50" prot="public" virt="non-virtual"><scope>ImageDetector</scope><name>ImageDetectorBase</name></member>
      <member refid="classImageDetector_1a6abdb497a8e309ac1bf986fd69103665" prot="public" virt="virtual"><scope>ImageDetector</scope><name>init</name></member>
      <member refid="classImageDetector_1a8b4b0693674bb3fbf85ad97c91d80a23" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>numberOfExposures_</name></member>
      <member refid="classImageDetector_1ab42a461656723360f4cc3ad71beec763" prot="public" virt="virtual"><scope>ImageDetector</scope><name>report</name></member>
      <member refid="classImageDetector_1ae3219de53c6bfeff0020db3034d97859" prot="public" virt="virtual"><scope>ImageDetector</scope><name>reset</name></member>
      <member refid="classImageDetectorBase_1ae909acd0cb5713d743754377d891a0b0" prot="public" virt="virtual"><scope>ImageDetector</scope><name>restore</name></member>
      <member refid="classImageDetector_1a0664b23196bd0b18fefc4eed721c9101" prot="public" virt="virtual"><scope>ImageDetector</scope><name>setExposureTimeSeconds</name></member>
      <member refid="classImageDetector_1a0470fd3b3f6d147d667336e5c34d41c2" prot="public" virt="virtual"><scope>ImageDetector</scope><name>shutdown</name></member>
      <member refid="classImageDetector_1ab79c73fb43aeecb665783fd546dea7ee" prot="public" virt="virtual"><scope>ImageDetector</scope><name>start</name></member>
      <member refid="classImageDetector_1ac1b77057fc0df217af27f81abd856d21" prot="public" virt="virtual"><scope>ImageDetector</scope><name>test</name></member>
      <member refid="classImageDetectorBase_1a804460a890f5e6318fa3cf8ee2fd19f9" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>update_</name></member>
      <member refid="classImageDetectorBase_1aaba62a227a4a41ea27dc074746c70822" prot="public" virt="non-virtual"><scope>ImageDetector</scope><name>version</name></member>
      <member refid="classImageDetector_1a466aed0c256e814e0568327a533688c9" prot="protected" virt="non-virtual"><scope>ImageDetector</scope><name>windows_</name></member>
      <member refid="classImageDetector_1aa4c1e0d3deef2e14c097d83da32641d6" prot="public" virt="virtual"><scope>ImageDetector</scope><name>~ImageDetector</name></member>
      <member refid="classImageDetectorBase_1aede21b2050ed2d19181d30d482c7cca7" prot="public" virt="virtual"><scope>ImageDetector</scope><name>~ImageDetectorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
