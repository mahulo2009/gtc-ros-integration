# Python stubs generated by omniidl from /work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/IMAGEDETECTOR.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "DGT.idl"
import DGT_idl
_0_DGT = omniORB.openModule("DGT")
_0_DGT__POA = omniORB.openModule("DGT__POA")

# #include "MMCommon.idl"
import MMCommon_idl
_0_MM = omniORB.openModule("MM")
_0_MM__POA = omniORB.openModule("MM__POA")

# #include "MonitorManager.idl"
import MonitorManager_idl
_0_MM = omniORB.openModule("MM")
_0_MM__POA = omniORB.openModule("MM__POA")

# #include "CONFIG.idl"
import CONFIG_idl
_0_CONFIG = omniORB.openModule("CONFIG")
_0_CONFIG__POA = omniORB.openModule("CONFIG__POA")

# #include "DCF.idl"
import DCF_idl
_0_DCF = omniORB.openModule("DCF")
_0_DCF__POA = omniORB.openModule("DCF__POA")

#
# Start of module "IMAGEDETECTOR"
#
__name__ = "IMAGEDETECTOR"
_0_IMAGEDETECTOR = omniORB.openModule("IMAGEDETECTOR", r"/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/IMAGEDETECTOR.idl")
_0_IMAGEDETECTOR__POA = omniORB.openModule("IMAGEDETECTOR__POA", r"/work/gcsop/src_c++/gtc/ImageDetector/ImageDetector.l/IMAGEDETECTOR.idl")


# interface ImageDetector_ifce
_0_IMAGEDETECTOR._d_ImageDetector_ifce = (omniORB.tcInternal.tv_objref, "IDL:gtc/IMAGEDETECTOR/ImageDetector_ifce:1.0", "ImageDetector_ifce")
omniORB.typeMapping["IDL:gtc/IMAGEDETECTOR/ImageDetector_ifce:1.0"] = _0_IMAGEDETECTOR._d_ImageDetector_ifce
_0_IMAGEDETECTOR.ImageDetector_ifce = omniORB.newEmptyClass()
class ImageDetector_ifce (_0_DCF.Device_ifce):
    _NP_RepositoryId = _0_IMAGEDETECTOR._d_ImageDetector_ifce[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_IMAGEDETECTOR.ImageDetector_ifce = ImageDetector_ifce
_0_IMAGEDETECTOR._tc_ImageDetector_ifce = omniORB.tcInternal.createTypeCode(_0_IMAGEDETECTOR._d_ImageDetector_ifce)
omniORB.registerType(ImageDetector_ifce._NP_RepositoryId, _0_IMAGEDETECTOR._d_ImageDetector_ifce, _0_IMAGEDETECTOR._tc_ImageDetector_ifce)

# ImageDetector_ifce operations and attributes
ImageDetector_ifce._d_expose = ((), (), {_0_DGT.GCSException._NP_RepositoryId: _0_DGT._d_GCSException})
ImageDetector_ifce._d_setExposureTimeSeconds = ((omniORB.tcInternal.tv_double, ), (), {_0_DGT.GCSException._NP_RepositoryId: _0_DGT._d_GCSException})
ImageDetector_ifce._d__get_idExposing = ((),(omniORB.tcInternal.tv_boolean,),None)
ImageDetector_ifce._d__get_idExposureTimeLeft = ((),(omniORB.tcInternal.tv_boolean,),None)

# ImageDetector_ifce object reference
class _objref_ImageDetector_ifce (_0_DCF._objref_Device_ifce):
    _NP_RepositoryId = ImageDetector_ifce._NP_RepositoryId

    def __init__(self, obj):
        _0_DCF._objref_Device_ifce.__init__(self, obj)

    def expose(self, *args):
        return self._obj.invoke("expose", _0_IMAGEDETECTOR.ImageDetector_ifce._d_expose, args)

    def setExposureTimeSeconds(self, *args):
        return self._obj.invoke("setExposureTimeSeconds", _0_IMAGEDETECTOR.ImageDetector_ifce._d_setExposureTimeSeconds, args)

    def _get_idExposing(self, *args):
        return self._obj.invoke("_get_idExposing", _0_IMAGEDETECTOR.ImageDetector_ifce._d__get_idExposing, args)

    idExposing = property(_get_idExposing)


    def _get_idExposureTimeLeft(self, *args):
        return self._obj.invoke("_get_idExposureTimeLeft", _0_IMAGEDETECTOR.ImageDetector_ifce._d__get_idExposureTimeLeft, args)

    idExposureTimeLeft = property(_get_idExposureTimeLeft)


omniORB.registerObjref(ImageDetector_ifce._NP_RepositoryId, _objref_ImageDetector_ifce)
_0_IMAGEDETECTOR._objref_ImageDetector_ifce = _objref_ImageDetector_ifce
del ImageDetector_ifce, _objref_ImageDetector_ifce

# ImageDetector_ifce skeleton
__name__ = "IMAGEDETECTOR__POA"
class ImageDetector_ifce (_0_DCF__POA.Device_ifce):
    _NP_RepositoryId = _0_IMAGEDETECTOR.ImageDetector_ifce._NP_RepositoryId


    _omni_op_d = {"expose": _0_IMAGEDETECTOR.ImageDetector_ifce._d_expose, "setExposureTimeSeconds": _0_IMAGEDETECTOR.ImageDetector_ifce._d_setExposureTimeSeconds, "_get_idExposing": _0_IMAGEDETECTOR.ImageDetector_ifce._d__get_idExposing, "_get_idExposureTimeLeft": _0_IMAGEDETECTOR.ImageDetector_ifce._d__get_idExposureTimeLeft}
    _omni_op_d.update(_0_DCF__POA.Device_ifce._omni_op_d)

ImageDetector_ifce._omni_skeleton = ImageDetector_ifce
_0_IMAGEDETECTOR__POA.ImageDetector_ifce = ImageDetector_ifce
omniORB.registerSkeleton(ImageDetector_ifce._NP_RepositoryId, ImageDetector_ifce)
del ImageDetector_ifce
__name__ = "IMAGEDETECTOR"

#
# End of module "IMAGEDETECTOR"
#
__name__ = "IMAGEDETECTOR_idl"

_exported_modules = ( "IMAGEDETECTOR", )

# The end.
